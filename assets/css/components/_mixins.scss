// Adds a browser prefix to the property
// @param {*} $property Property
// @param {*} $value Value
@mixin css3-prefix($property, $value) {
    -webkit-#{$property}: #{$value};
     -khtml-#{$property}: #{$value};
       -moz-#{$property}: #{$value};
        -ms-#{$property}: #{$value};
         -o-#{$property}: #{$value};
            #{$property}: #{$value};
}

@mixin background-size($size: cover) {
    @include css3-prefix('background-size', $size);
}


@mixin grow($easeOutTransition: 0.2s) {
    -webkit-transition:all $easeOutTransition ease-out;
    -moz-transition:all $easeOutTransition ease-out;
    -ms-transition:all $easeOutTransition ease-out;
    -o-transition:all $easeOutTransition ease-out;
    transition:all $easeOutTransition ease-out;
}

@mixin growHover($scale: 1.05) {
    -webkit-transform:scale($scale);
    -moz-transform:scale($scale);
    -ms-transform:scale($scale);
    -o-transform:scale($scale);
    transform:scale($scale);
}


// --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

  // Flexbox display
@mixin flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
    -webkit-box-flex: $values;
       -moz-box-flex: $values;
        -webkit-flex: $values;
            -ms-flex: $values;
                flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
    @include css3-prefix('flex-direction', $direction);
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
    @include css3-prefix('flex-wrap', $wrap);
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
    @include css3-prefix('flex-flow', $flow);
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
    -webkit-box-ordinal-group: $val;
        -moz-box-ordinal-group: $val;
                -ms-flex-order: $val;
                -webkit-order: $val;
                        order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
    @include css3-prefix('flex-grow', $grow);
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
    @include css3-prefix('flex-shrink', $shrink);
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
    @include css3-prefix('flex-basis', $width);
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
    -webkit-justify-content: $justify;
        -moz-justify-content: $justify;
        -ms-justify-content: $justify;
            justify-content: $justify;
            -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
    @include css3-prefix('align-content', $align);
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
    @include css3-prefix('align-items', $align);
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
    @include css3-prefix('align-self', $align);
}
